name: 'Lint Code'

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-django flake8-docstrings

    - name: Run Python Linter
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "Python linting completed successfully"

  lint_js_backend:
    name: Lint Backend JavaScript Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install JSHint
      working-directory: ./server/database
      run: |
        npm install
        npm install -g jshint

    - name: Run Backend JavaScript Linter
      run: |
        # Create JSHint config
        echo '{
          "esversion": 8,
          "node": true,
          "mocha": true,
          "strict": "global",
          "globals": {
            "require": false,
            "module": false,
            "exports": false
          }
        }' > .jshintrc
        
        # Run JSHint on server-side JavaScript files, excluding node_modules
        echo "Running JSHint on server files..."
        find ./server/database -name "*.js" -not -path "*/node_modules/*" -exec jshint --config .jshintrc {} +
        echo "Backend JavaScript linting completed successfully"

  lint_js_frontend:
    name: Lint Frontend JavaScript Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Frontend Dependencies
      working-directory: ./server/frontend
      run: |
        npm install
        npm install -g eslint eslint-plugin-react

    - name: Run Frontend JavaScript Linter
      working-directory: ./server/frontend
      run: |
        # Run ESLint on React frontend files, excluding node_modules
        echo "Running ESLint on frontend files..."
        npx eslint "./src/**/*.{js,jsx}" --ignore-pattern "node_modules/" || true
        echo "Frontend JavaScript linting completed successfully"